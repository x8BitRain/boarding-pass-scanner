{"ast":null,"code":"var _jsxFileName = \"/home/mint/ticket2calendar/src/components/capture.jsx\";\nimport React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.detect = () => {\n      this.setState({\n        result_string: window.string_result\n      }, () => {\n        console.log(this.state.result_string);\n        console.log(parseBCBP(this.state.result_string));\n      });\n    };\n\n    this.thing = e => {\n      console.log(this.state.result_string);\n    };\n\n    this.state = {\n      result_string: null\n    };\n  }\n\n  componentDidMount() {\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n\n    w.onmessage = () => {\n      console.log(this.state.result_string);\n\n      if (localStorage.barcode) {\n        this.setState({\n          result_string: localStorage.barcode\n        }, () => {\n          /*w.terminate();*/\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"dbr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), this.state.result_string === \"test\" ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"BIG TEST\") : null, React.createElement(\"button\", {\n      onClick: this.detect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"result!\"));\n  }\n\n}","map":{"version":3,"sources":["/home/mint/ticket2calendar/src/components/capture.jsx"],"names":["React","parseBCBP","Capture","Component","constructor","props","detect","setState","result_string","window","string_result","console","log","state","thing","e","componentDidMount","document","getElementById","remove","w","Worker","onmessage","localStorage","barcode","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,MAvBmB,GAuBV,MAAM;AACb,WAAKC,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAACC,MAAM,CAACC;AAAvB,OAAd,EAAsD,MAAM;AAC1DC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,aAAvB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAAC,KAAKY,KAAL,CAAWL,aAAZ,CAArB;AACD,OAHD;AAID,KA5BkB;;AAAA,SA8BnBM,KA9BmB,GA8BVC,CAAD,IAAO;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,aAAvB;AACD,KAhCkB;;AAEjB,SAAKK,KAAL,GAAa;AACXL,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AACDQ,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,MAApC;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,MAAxC;AACA,QAAIC,CAAC,GAAG,IAAIC,MAAJ,CAAW,iBAAX,CAAR;;AACAD,IAAAA,CAAC,CAACE,SAAF,GAAc,MAAM;AAClBX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,aAAvB;;AACA,UAAIe,YAAY,CAACC,OAAjB,EAA0B;AACxB,aAAKjB,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAEe,YAAY,CAACC;AADhB,SAAd,EAEG,MAAK;AAER;AACC,SALD;AAMD;AACF,KAVD;AAWD;;AAaDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEM,KAAKZ,KAAL,CAAWL,aAAX,KAA6B,MAA7B,GAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtC,GAA0D,IAFhE,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKF,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF;AAOD;;AA3CkD","sourcesContent":["import React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\n\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result_string: null\n    }\n  }\n  componentDidMount() {\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n    w.onmessage = () => {\n      console.log(this.state.result_string)\n      if (localStorage.barcode) {\n        this.setState({\n          result_string: localStorage.barcode\n        }, ()=> {\n\n        /*w.terminate();*/\n        });\n      }\n    };\n  }\n\n  detect = () => {\n    this.setState({ result_string:window.string_result }, () => {\n      console.log(this.state.result_string);\n      console.log(parseBCBP(this.state.result_string))\n    });\n  };\n\n  thing = (e) => {\n    console.log(this.state.result_string)\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"dbr\" ></div> \n          { this.state.result_string === \"test\" ? <h1>BIG TEST</h1> : null }\n        <button onClick={this.detect}>result!</button>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}