{"ast":null,"code":"var _jsxFileName = \"/home/mint/ticket2calendar/src/components/capture.jsx\";\nimport React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.detect = () => {\n      this.setState({\n        result_string: window.string_result\n      }, () => {\n        console.log(this.state.result_string);\n        console.log(parseBCBP(this.state.result_string));\n      });\n    };\n\n    this.thing = e => {\n      console.log(\"Cross scope hacking!!!\" + e.target);\n    };\n\n    this.state = {\n      result_string: window.string_result\n    };\n  }\n\n  componentDidMount() {\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n\n    w.onmessage = function (event) {\n      console.log(event.data);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"dbr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), this.state.result_string === \"test\" ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"BIG TEST\") : null, React.createElement(\"button\", {\n      onClick: this.detect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"result!\"));\n  }\n\n}","map":{"version":3,"sources":["/home/mint/ticket2calendar/src/components/capture.jsx"],"names":["React","parseBCBP","Capture","Component","constructor","props","detect","setState","result_string","window","string_result","console","log","state","thing","e","target","componentDidMount","document","getElementById","remove","w","Worker","onmessage","event","data","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,MAfmB,GAeV,MAAM;AACb,WAAKC,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAACC,MAAM,CAACC;AAAvB,OAAd,EAAsD,MAAM;AAC1DC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,aAAvB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAAC,KAAKY,KAAL,CAAWL,aAAZ,CAArB;AACD,OAHD;AAID,KApBkB;;AAAA,SAsBnBM,KAtBmB,GAsBVC,CAAD,IAAO;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BG,CAAC,CAACC,MAAzC;AACD,KAxBkB;;AAEjB,SAAKH,KAAL,GAAa;AACXL,MAAAA,aAAa,EAAEC,MAAM,CAACC;AADX,KAAb;AAGD;;AACDO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,MAApC;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,MAAxC;AACA,QAAIC,CAAC,GAAG,IAAIC,MAAJ,CAAW,iBAAX,CAAR;;AACAD,IAAAA,CAAC,CAACE,SAAF,GAAc,UAASC,KAAT,EAAe;AAC3Bb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACC,IAAlB;AACD,KAFD;AAGD;;AAaDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGI,KAAKb,KAAL,CAAWL,aAAX,KAA6B,MAA7B,GAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtC,GAA0D,IAH9D,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKF,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF;AASD;;AArCkD","sourcesContent":["import React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\n\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result_string: window.string_result\n    }\n  }\n  componentDidMount() {\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n    w.onmessage = function(event){\n      console.log(event.data);\n    };\n  }\n\n  detect = () => {\n    this.setState({ result_string:window.string_result }, () => {\n      console.log(this.state.result_string);\n      console.log(parseBCBP(this.state.result_string))\n    });\n  };\n\n  thing = (e) => {\n    console.log(\"Cross scope hacking!!!\" + e.target)\n  }\n\n  render() {\n    return (\n      <div>\n      \n      <div id=\"dbr\" ></div> \n        { this.state.result_string === \"test\" ? <h1>BIG TEST</h1> : null }\n        <button onClick={this.detect}>result!</button>\n        \n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}