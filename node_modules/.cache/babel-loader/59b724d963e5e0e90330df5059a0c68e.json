{"ast":null,"code":"var _jsxFileName = \"/home/mint/ticket2calendar/src/components/capture.jsx\";\nimport React from 'react';\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.detect = () => {\n      if (window.BarcodeDetector) {//console.error('Barcode Detection not supported');\n      }\n    };\n  }\n\n  componentDidMount() {\n    let image = document.getElementById('image');\n    let canvas = document.getElementById('canvas');\n    let ctx = canvas.getContext(\"2d\");\n    canvas.width = image.width;\n    canvas.height = image.height;\n    ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n    const scale = canvas.width / image.width;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"detect\",\n      onClick: this.detect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Detect barcodes\"), React.createElement(\"img\", {\n      hidden: true,\n      id: \"image\",\n      crossOrigin: \"anonymous \",\n      src: \"https://raw.githubusercontent.com/ihabunek/pdf417-py/master/images/1_basic.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"canvas\", {\n      id: \"canvas\",\n      width: \"320\",\n      height: \"320\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/mint/ticket2calendar/src/components/capture.jsx"],"names":["React","Capture","Component","constructor","props","detect","window","BarcodeDetector","componentDidMount","image","document","getElementById","canvas","ctx","getContext","width","height","drawImage","scale","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAiBnBC,MAjBmB,GAiBV,MAAM;AACb,UAAIC,MAAM,CAACC,eAAX,EAA4B,CAC3B;AACA;AACF,KArBkB;AAElB;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,QAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACA,QAAIC,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACA,QAAIE,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAeN,KAAK,CAACM,KAArB;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAgBP,KAAK,CAACO,MAAtB;AACAH,IAAAA,GAAG,CAACI,SAAJ,CAAcR,KAAd,EACA,CADA,EACG,CADH,EACMA,KAAK,CAACM,KADZ,EACmBN,KAAK,CAACO,MADzB,EAEA,CAFA,EAEG,CAFH,EAEMJ,MAAM,CAACG,KAFb,EAEoBH,MAAM,CAACI,MAF3B;AAIA,UAAME,KAAK,GAAGN,MAAM,CAACG,KAAP,GAAeN,KAAK,CAACM,KAAnC;AACA;;AAQDI,EAAAA,MAAM,GAAG;AACR,WACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAE,KAAKd,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAEC;AAAK,MAAA,MAAM,MAAX;AAAY,MAAA,EAAE,EAAC,OAAf;AAAuB,MAAA,WAAW,EAAC,YAAnC;AAA+C,MAAA,GAAG,EAAC,gFAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,OAE4I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5I,EAGC;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAC,KAA1B;AAAgC,MAAA,MAAM,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADC;AAQA;;AAjCmD","sourcesContent":["import React from 'react';\n\nexport default class Capture extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tlet image = document.getElementById('image');\n\t\tlet canvas = document.getElementById('canvas');\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\t\tctx.drawImage(image, \n\t\t0, 0, image.width, image.height,\n\t\t0, 0, canvas.width, canvas.height);\n\n\t\tconst scale = canvas.width / image.width;\n\t}\n\n\tdetect = () => {\n  \tif (window.BarcodeDetector) {\n    //console.error('Barcode Detection not supported');\n \t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t<div>\n\t\t<button id=\"detect\" onClick={this.detect} >Detect barcodes</button>\n\t\t<img hidden id=\"image\" crossOrigin='anonymous 'src=\"https://raw.githubusercontent.com/ihabunek/pdf417-py/master/images/1_basic.jpg\"></img> <br/>\n\t\t<canvas id=\"canvas\" width=\"320\" height=\"320\"></canvas>\n\t</div>\n\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}