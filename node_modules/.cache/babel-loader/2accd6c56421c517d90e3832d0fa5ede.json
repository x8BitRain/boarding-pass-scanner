{"ast":null,"code":"\"use strict\";\n\nvar security_var = -1;\nmodule.exports = {\n  format_code: {\n    length: 1,\n    offset: 1,\n    content: \"S|M\",\n    explanation: \"Format Code\"\n  },\n  legs: {\n    length: 1,\n    offset: 2,\n    content: \"[1-4]\",\n    explanation: \"Number of Legs Encoded\"\n  },\n  passenger: {\n    length: 20,\n    offset: 22,\n    content: \"\",\n    explanation: \"Passenger Name\"\n  },\n  eticket: {\n    length: 1,\n    offset: 23,\n    content: \"E\",\n    explanation: \"Electronic Ticket Indicator\"\n  },\n  pnr: {\n    length: 7,\n    offset: 30,\n    content: \"\",\n    explanation: \"Operating Carrier PNR Code\"\n  },\n  origin: {\n    length: 3,\n    offset: 33,\n    content: \"\",\n    explanation: \"From City Airport Code\"\n  },\n  destination: {\n    length: 3,\n    offset: 36,\n    content: \"\",\n    explanation: \"To City Airport Code\"\n  },\n  airline: {\n    length: 3,\n    offset: 39,\n    content: \"\",\n    explanation: \"Operating carrier Designator\"\n  },\n  flight_number: {\n    length: 5,\n    offset: 44,\n    content: \"\",\n    explanation: \"Flight Number\"\n  },\n  flight_date: {\n    length: 3,\n    offset: 47,\n    content: \"[0-9]{3}\",\n    explanation: \"Date of Flight (Julian Date)\"\n  },\n  compartment_code: {\n    length: 1,\n    offset: 48,\n    content: \"[A-Z]\",\n    explanation: \"Booking Class. Compartment Code\"\n  },\n  seat: {\n    length: 4,\n    offset: 52,\n    content: \"\",\n    explanation: \"Seat Number\"\n  },\n  checkin_number: {\n    length: 5,\n    offset: 57,\n    content: \"\",\n    explanation: \"Check-in Sequence Number\"\n  },\n  // passenger_status -> getPassengerStatus\n  passenger_status: {\n    length: 1,\n    offset: 58,\n    content: \"[0-9A-Z]\",\n    explanation: \"Passenger Status\"\n  },\n  conditional_size: {\n    length: 2,\n    offset: 60,\n    content: \"[0-F]{2}\",\n    explanation: \"Field size of variable field (Conditional + Airline item 4)\"\n  },\n  // Conditional -> hasConditionalFields\n  init_version_number: {\n    length: 1,\n    offset: 61,\n    content: \"GREATER_THAN\",\n    explanation: \"Beginning of version number\"\n  },\n  version_number: {\n    length: 1,\n    offset: 62,\n    content: \"[1-5]\",\n    explanation: \"Version number\"\n  },\n  // conditionals_size -> size of next block\n  conditionals_size: {\n    length: 2,\n    offset: 64,\n    content: \"[0-F]{2}\",\n    explanation: \"Field size of following structured message - unique\"\n  },\n  passenger_details: {\n    length: 1,\n    offset: 65,\n    content: \"[0-9A-Z\\\\s]\",\n    explanation: \"Passenger Description\"\n  },\n  source_checking: {\n    length: 1,\n    offset: 66,\n    content: \"[WKRMOTV\\\\s]\",\n    explanation: \"Source of check-in\"\n  },\n  boarding_pass_issue: {\n    length: 1,\n    offset: 67,\n    content: \"[WKXRMOTV\\\\s]\",\n    explanation: \"Source of Boarding Pass Issuance\"\n  },\n  date_pass_issue: {\n    length: 4,\n    offset: 71,\n    content: \"[0-9]{4}\",\n    explanation: \"Date of Issue of Boarding Pass (Julian Date)\"\n  },\n  document_type: {\n    length: 1,\n    offset: 72,\n    content: \"B|I\",\n    explanation: \"Document Type\"\n  },\n  airline_issuer: {\n    length: 3,\n    offset: 75,\n    content: \"\",\n    explanation: \"Airline Designator of boarding pass issuer\"\n  },\n  bagtag: {\n    length: 13,\n    offset: 88,\n    content: \"\",\n    explanation: \"Baggage Tag License Plate Number (s)\"\n  },\n  bagtag_first: {\n    length: 13,\n    offset: 103,\n    content: \"\",\n    explanation: \"1st Non-Consecutive Baggage Tag License Plate Number\"\n  },\n  bagtag_second: {\n    length: 13,\n    offset: 114,\n    content: \"\",\n    explanation: \"2nd Non-Consecutive Baggage Tag License Plate Number\"\n  },\n  repeated_conditionals: {\n    length: 2,\n    offset: 116,\n    content: \"[0-F]{2}\",\n    explanation: \"Field size of following structured message - repeated\"\n  },\n  airline_code: {\n    length: 3,\n    offset: 119,\n    content: \"[0-9]{3}\",\n    explanation: \"Airline Numeric Code\"\n  },\n  doc_serial_number: {\n    length: 10,\n    offset: 129,\n    content: \"\",\n    explanation: \"Document Form/Serial Number\"\n  },\n  selectee_indicator: {\n    length: 1,\n    offset: 130,\n    content: \"[\\\\s0-1]\",\n    explanation: \"Selectee Indicator\"\n  },\n  doc_verification: {\n    length: 1,\n    offset: 131,\n    content: \"[\\\\s0-2]\",\n    explanation: \"International Document Verification\"\n  },\n  marketing_carrier: {\n    length: 3,\n    offset: 134,\n    content: \"\",\n    explanation: \"Marketing Carrier Designator\"\n  },\n  frequent_flyer_airline: {\n    length: 3,\n    offset: 137,\n    content: \"\",\n    explanation: \"Frequent Flyer Airline Designator\"\n  },\n  frequent_flyer_number: {\n    length: 16,\n    offset: 153,\n    content: \"\",\n    explanation: \"Frequent Flyer Number\"\n  },\n  id_ad_indicator: {\n    length: 1,\n    offset: 154,\n    content: \"\",\n    explanation: \"ID/AD Indicator\"\n  },\n  baggage_allowance: {\n    length: 3,\n    offset: 157,\n    content: \"\",\n    explanation: \"Free Baggage Allowance\"\n  },\n  fast_track: {\n    length: 1,\n    offset: 158,\n    content: \"[YN\\\\s]\",\n    explanation: \"Fast Track\"\n  },\n  for_airline_use: {\n    length: security_var,\n    offset: 158 + security_var,\n    content: \"\",\n    explanation: \"For individual airline use\"\n  },\n  // Security\n  init_of_security_data: {\n    length: 1,\n    offset: 159 + security_var,\n    content: \"CARET_OR_GREATER_THAN\",\n    explanation: \"Beginning of security data\"\n  },\n  type_of_security_data: {\n    length: 1,\n    offset: 160 + security_var,\n    content: \"\",\n    explanation: \"Type of Security Data\"\n  },\n  length_of_security_data: {\n    length: 2,\n    offset: 162 + security_var,\n    content: \"[0-F]{2}\",\n    explanation: \"Length of Security Data\"\n  },\n  security_data: {\n    length: 100,\n    offset: 262 + security_var,\n    content: \"\",\n    explanation: \"Security Data\"\n  }\n};","map":{"version":3,"sources":["/home/mint/ticket2calendar/node_modules/bcbp-parser/dist/dataset/BCBPStandard.js"],"names":["security_var","module","exports","format_code","length","offset","content","explanation","legs","passenger","eticket","pnr","origin","destination","airline","flight_number","flight_date","compartment_code","seat","checkin_number","passenger_status","conditional_size","init_version_number","version_number","conditionals_size","passenger_details","source_checking","boarding_pass_issue","date_pass_issue","document_type","airline_issuer","bagtag","bagtag_first","bagtag_second","repeated_conditionals","airline_code","doc_serial_number","selectee_indicator","doc_verification","marketing_carrier","frequent_flyer_airline","frequent_flyer_number","id_ad_indicator","baggage_allowance","fast_track","for_airline_use","init_of_security_data","type_of_security_data","length_of_security_data","security_data"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar security_var = -1;\n\nmodule.exports = {\n  format_code: { length: 1, offset: 1, content: \"S|M\", explanation: \"Format Code\" },\n  legs: { length: 1, offset: 2, content: \"[1-4]\", explanation: \"Number of Legs Encoded\" },\n  passenger: { length: 20, offset: 22, content: \"\", explanation: \"Passenger Name\" },\n  eticket: { length: 1, offset: 23, content: \"E\", explanation: \"Electronic Ticket Indicator\" },\n  pnr: { length: 7, offset: 30, content: \"\", explanation: \"Operating Carrier PNR Code\" },\n  origin: { length: 3, offset: 33, content: \"\", explanation: \"From City Airport Code\" },\n  destination: { length: 3, offset: 36, content: \"\", explanation: \"To City Airport Code\" },\n  airline: { length: 3, offset: 39, content: \"\", explanation: \"Operating carrier Designator\" },\n  flight_number: { length: 5, offset: 44, content: \"\", explanation: \"Flight Number\" },\n  flight_date: { length: 3, offset: 47, content: \"[0-9]{3}\", explanation: \"Date of Flight (Julian Date)\" },\n  compartment_code: { length: 1, offset: 48, content: \"[A-Z]\", explanation: \"Booking Class. Compartment Code\" },\n  seat: { length: 4, offset: 52, content: \"\", explanation: \"Seat Number\" },\n  checkin_number: { length: 5, offset: 57, content: \"\", explanation: \"Check-in Sequence Number\" },\n  // passenger_status -> getPassengerStatus\n  passenger_status: { length: 1, offset: 58, content: \"[0-9A-Z]\", explanation: \"Passenger Status\" },\n  conditional_size: { length: 2, offset: 60, content: \"[0-F]{2}\", explanation: \"Field size of variable field (Conditional + Airline item 4)\" },\n  // Conditional -> hasConditionalFields\n  init_version_number: { length: 1, offset: 61, content: \"GREATER_THAN\", explanation: \"Beginning of version number\" },\n  version_number: { length: 1, offset: 62, content: \"[1-5]\", explanation: \"Version number\" },\n  // conditionals_size -> size of next block\n  conditionals_size: { length: 2, offset: 64, content: \"[0-F]{2}\", explanation: \"Field size of following structured message - unique\" },\n  passenger_details: { length: 1, offset: 65, content: \"[0-9A-Z\\\\s]\", explanation: \"Passenger Description\" },\n  source_checking: { length: 1, offset: 66, content: \"[WKRMOTV\\\\s]\", explanation: \"Source of check-in\" },\n  boarding_pass_issue: { length: 1, offset: 67, content: \"[WKXRMOTV\\\\s]\", explanation: \"Source of Boarding Pass Issuance\" },\n  date_pass_issue: { length: 4, offset: 71, content: \"[0-9]{4}\", explanation: \"Date of Issue of Boarding Pass (Julian Date)\" },\n  document_type: { length: 1, offset: 72, content: \"B|I\", explanation: \"Document Type\" },\n  airline_issuer: { length: 3, offset: 75, content: \"\", explanation: \"Airline Designator of boarding pass issuer\" },\n  bagtag: { length: 13, offset: 88, content: \"\", explanation: \"Baggage Tag License Plate Number (s)\" },\n  bagtag_first: { length: 13, offset: 103, content: \"\", explanation: \"1st Non-Consecutive Baggage Tag License Plate Number\" },\n  bagtag_second: { length: 13, offset: 114, content: \"\", explanation: \"2nd Non-Consecutive Baggage Tag License Plate Number\" },\n  repeated_conditionals: { length: 2, offset: 116, content: \"[0-F]{2}\", explanation: \"Field size of following structured message - repeated\" },\n  airline_code: { length: 3, offset: 119, content: \"[0-9]{3}\", explanation: \"Airline Numeric Code\" },\n  doc_serial_number: { length: 10, offset: 129, content: \"\", explanation: \"Document Form/Serial Number\" },\n  selectee_indicator: { length: 1, offset: 130, content: \"[\\\\s0-1]\", explanation: \"Selectee Indicator\" },\n  doc_verification: { length: 1, offset: 131, content: \"[\\\\s0-2]\", explanation: \"International Document Verification\" },\n  marketing_carrier: { length: 3, offset: 134, content: \"\", explanation: \"Marketing Carrier Designator\" },\n  frequent_flyer_airline: { length: 3, offset: 137, content: \"\", explanation: \"Frequent Flyer Airline Designator\" },\n  frequent_flyer_number: { length: 16, offset: 153, content: \"\", explanation: \"Frequent Flyer Number\" },\n  id_ad_indicator: { length: 1, offset: 154, content: \"\", explanation: \"ID/AD Indicator\" },\n  baggage_allowance: { length: 3, offset: 157, content: \"\", explanation: \"Free Baggage Allowance\" },\n  fast_track: { length: 1, offset: 158, content: \"[YN\\\\s]\", explanation: \"Fast Track\" },\n  for_airline_use: { length: security_var, offset: 158 + security_var, content: \"\", explanation: \"For individual airline use\" },\n  // Security\n  init_of_security_data: { length: 1, offset: 159 + security_var, content: \"CARET_OR_GREATER_THAN\", explanation: \"Beginning of security data\" },\n  type_of_security_data: { length: 1, offset: 160 + security_var, content: \"\", explanation: \"Type of Security Data\" },\n  length_of_security_data: { length: 2, offset: 162 + security_var, content: \"[0-F]{2}\", explanation: \"Length of Security Data\" },\n  security_data: { length: 100, offset: 262 + security_var, content: \"\", explanation: \"Security Data\" }\n};"]},"metadata":{},"sourceType":"script"}