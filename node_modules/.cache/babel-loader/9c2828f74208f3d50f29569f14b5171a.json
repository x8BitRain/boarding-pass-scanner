{"ast":null,"code":"var _jsxFileName = \"/home/mint/ticket2calendar/src/components/capture.jsx\";\nimport React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\nimport Results from \"./results.jsx\";\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.thing = e => {\n      console.log(this.state.result_string);\n      console.log(this.state.bcbp_result);\n    };\n\n    this.state = {\n      result_string: null,\n      bcbp_result: {}\n    };\n  }\n\n  componentDidMount() {\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n    setTimeout(async function () {\n      window.scanBarcode();\n    }, 1000);\n\n    w.onmessage = () => {\n      console.log(this.state.result_string);\n\n      if (localStorage.barcode) {\n        this.setState({\n          result_string: localStorage.barcode\n        }, () => {\n          localStorage.clear();\n          w.terminate();\n          console.log(this.state.result_string);\n          this.setState({\n            bcbp_result: parseBCBP(this.state.result_string)\n          }, () => {\n            console.log(this.state.bcbp_result);\n          });\n        });\n      }\n    };\n  } // detect = () => {\n  //   this.setState({ result_string:window.string_result }, () => {\n  //     console.log(this.state.result_string);\n  //     console.log(parseBCBP(this.state.result_string))\n  //   });\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"dbr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.thing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Print result!\"), this.state.bcbp_result ? Object.entries(this.state.bcbp_result).map(([key, value]) => {\n      return React.createElement(\"div\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, key), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, value));\n    }) : null);\n  }\n\n} // {this.state.bcbp_result ? <Results results={} /> : null}","map":{"version":3,"sources":["/home/mint/ticket2calendar/src/components/capture.jsx"],"names":["React","parseBCBP","Results","Capture","Component","constructor","props","thing","e","console","log","state","result_string","bcbp_result","componentDidMount","document","getElementById","remove","w","Worker","setTimeout","window","scanBarcode","onmessage","localStorage","barcode","setState","clear","terminate","render","Object","entries","map","key","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoCnBC,KApCmB,GAoCVC,CAAD,IAAO;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,aAAvB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,WAAvB;AACD,KAvCkB;;AAEjB,SAAKF,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,IADJ;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,MAApC;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,MAAxC;AACA,QAAIC,CAAC,GAAG,IAAIC,MAAJ,CAAW,iBAAX,CAAR;AACAC,IAAAA,UAAU,CAAC,kBAAgB;AAAEC,MAAAA,MAAM,CAACC,WAAP;AAAsB,KAAzC,EAA2C,IAA3C,CAAV;;AACAJ,IAAAA,CAAC,CAACK,SAAF,GAAc,MAAM;AAClBd,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,aAAvB;;AACA,UAAIY,YAAY,CAACC,OAAjB,EAA0B;AACxB,aAAKC,QAAL,CAAc;AACZd,UAAAA,aAAa,EAAEY,YAAY,CAACC;AADhB,SAAd,EAEG,MAAK;AACND,UAAAA,YAAY,CAACG,KAAb;AACAT,UAAAA,CAAC,CAACU,SAAF;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,aAAvB;AACA,eAAKc,QAAL,CAAc;AACZb,YAAAA,WAAW,EAAEZ,SAAS,CAAC,KAAKU,KAAL,CAAWC,aAAZ;AADV,WAAd,EAEG,MAAI;AAACH,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,WAAvB;AAAoC,WAF5C;AAGD,SATD;AAUD;AACF,KAdD;AAeD,GA5BkD,CA8BnD;AACA;AACA;AACA;AACA;AACA;;;AAOAgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKtB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGG,KAAKI,KAAL,CAAWE,WAAX,GAAyBiB,MAAM,CAACC,OAAP,CAAe,KAAKpB,KAAL,CAAWE,WAA1B,EAAuCmB,GAAvC,CAA2C,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AACzF,aACE;AAAK,QAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,GAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,KAAJ,CAFF,CADF;AAMD,KAP6B,CAAzB,GAOA,IAVH,CADF;AAcD;;AAzDkD,C,CA4D7C","sourcesContent":["import React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\nimport Results from \"./results.jsx\"\n\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result_string: null, \n      bcbp_result: {}\n    }\n  }\n  componentDidMount() {\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n    setTimeout(async function(){ window.scanBarcode() }, 1000);\n    w.onmessage = () => {\n      console.log(this.state.result_string)\n      if (localStorage.barcode) {\n        this.setState({\n          result_string: localStorage.barcode\n        }, ()=> {\n          localStorage.clear();\n          w.terminate();\n          console.log(this.state.result_string);\n          this.setState({\n            bcbp_result: parseBCBP(this.state.result_string)\n          }, ()=>{console.log(this.state.bcbp_result)});\n        });\n      }\n    };\n  }\n\n  // detect = () => {\n  //   this.setState({ result_string:window.string_result }, () => {\n  //     console.log(this.state.result_string);\n  //     console.log(parseBCBP(this.state.result_string))\n  //   });\n  // };\n\n  thing = (e) => {\n    console.log(this.state.result_string);\n    console.log(this.state.bcbp_result);\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"dbr\" ></div> \n        <button onClick={this.thing}>Print result!</button>\n        {this.state.bcbp_result ? Object.entries(this.state.bcbp_result).map(([key, value]) => {\n      return (\n        <div key={key}>\n          <p>{key}</p>\n          <p>{value}</p>\n        </div>\n      );\n    }) : null}\n      </div>\n    );\n  }\n}\n\n        // {this.state.bcbp_result ? <Results results={} /> : null}\n"]},"metadata":{},"sourceType":"module"}