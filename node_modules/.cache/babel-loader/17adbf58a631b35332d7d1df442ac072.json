{"ast":null,"code":"var _jsxFileName = \"/home/mint/ticket2calendar/src/components/capture.jsx\";\nimport React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.thing = e => {\n      console.log(this.state.result_string);\n      console.log(this.state.bcbp_result);\n    };\n\n    this.state = {\n      result_string: null,\n      bcbp_result: {}\n    };\n  }\n\n  componentDidMount() {\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n\n    w.onmessage = () => {\n      console.log(this.state.result_string);\n\n      if (localStorage.barcode) {\n        this.setState({\n          result_string: localStorage.barcode\n        }, () => {\n          localStorage.clear();\n          w.terminate();\n          console.log(this.state.result_string);\n          this.setState({\n            bcbp_result: parseBCBP(this.state.result_string)\n          });\n        });\n      }\n    };\n  } // detect = () => {\n  //   this.setState({ result_string:window.string_result }, () => {\n  //     console.log(this.state.result_string);\n  //     console.log(parseBCBP(this.state.result_string))\n  //   });\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"dbr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), this.state.result_string === \"test\" ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"BIG TEST\") : null, React.createElement(\"button\", {\n      onClick: this.detect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"result!\"), React.createElement(\"button\", {\n      onClick: this.thing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"do thing\"));\n  }\n\n}","map":{"version":3,"sources":["/home/mint/ticket2calendar/src/components/capture.jsx"],"names":["React","parseBCBP","Capture","Component","constructor","props","thing","e","console","log","state","result_string","bcbp_result","componentDidMount","document","getElementById","remove","w","Worker","onmessage","localStorage","barcode","setState","clear","terminate","render","detect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmCnBC,KAnCmB,GAmCVC,CAAD,IAAO;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,aAAvB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,WAAvB;AACD,KAtCkB;;AAEjB,SAAKF,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,IADJ;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,MAApC;AACAF,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,MAAxC;AACA,QAAIC,CAAC,GAAG,IAAIC,MAAJ,CAAW,iBAAX,CAAR;;AACAD,IAAAA,CAAC,CAACE,SAAF,GAAc,MAAM;AAClBX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,aAAvB;;AACA,UAAIS,YAAY,CAACC,OAAjB,EAA0B;AACxB,aAAKC,QAAL,CAAc;AACZX,UAAAA,aAAa,EAAES,YAAY,CAACC;AADhB,SAAd,EAEG,MAAK;AACND,UAAAA,YAAY,CAACG,KAAb;AACAN,UAAAA,CAAC,CAACO,SAAF;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,aAAvB;AACA,eAAKW,QAAL,CAAc;AACZV,YAAAA,WAAW,EAAEX,SAAS,CAAC,KAAKS,KAAL,CAAWC,aAAZ;AADV,WAAd;AAGD,SATD;AAUD;AACF,KAdD;AAeD,GA3BkD,CA6BnD;AACA;AACA;AACA;AACA;AACA;;;AAOAc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEM,KAAKf,KAAL,CAAWC,aAAX,KAA6B,MAA7B,GAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtC,GAA0D,IAFhE,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKe,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKpB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF;AAQD;;AAlDkD","sourcesContent":["import React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\n\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result_string: null, \n      bcbp_result: {}\n    }\n  }\n  componentDidMount() {\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n    w.onmessage = () => {\n      console.log(this.state.result_string)\n      if (localStorage.barcode) {\n        this.setState({\n          result_string: localStorage.barcode\n        }, ()=> {\n          localStorage.clear();\n          w.terminate();\n          console.log(this.state.result_string);\n          this.setState({\n            bcbp_result: parseBCBP(this.state.result_string)\n          });\n        });\n      }\n    };\n  }\n\n  // detect = () => {\n  //   this.setState({ result_string:window.string_result }, () => {\n  //     console.log(this.state.result_string);\n  //     console.log(parseBCBP(this.state.result_string))\n  //   });\n  // };\n\n  thing = (e) => {\n    console.log(this.state.result_string);\n    console.log(this.state.bcbp_result);\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"dbr\" ></div> \n          { this.state.result_string === \"test\" ? <h1>BIG TEST</h1> : null }\n        <button onClick={this.detect}>result!</button>\n        <button onClick={this.thing}>do thing</button>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}